[project]
name = "smartvision"
version = "0.1.0"
description = ""
authors = [
    {name = "tju",email = "tony.ju@me.com"}
]
readme = "README.md"
requires-python = ">=3.10, <4.0"

dependencies = [
    "oss2 (>=2.19.1,<3.0.0)",
    "python-dotenv (>=1.1.0,<2.0.0)",
    "streamlit-chat-animated (>=0.0.3.3,<0.0.4.0)",
    "streamlit-chat (>=0.1.1,<0.2.0)",
    "streamlit-chatbot (>=0.0.2.2,<0.0.3.0)",
    "streamlit-option-menu (>=0.4.0,<0.5.0)",
    "streamlit-carousel (>=1.1.2,<2.0.0)",
    "streamlit (>=1.45.0,<2.0.0)",
    "ultralytics (>=8.3.128,<9.0.0)",
    "watchdog (>=6.0.0,<7.0.0)",
    "pynvim (>=0.5.2,<0.6.0)",
    "python-lsp-server[all] (>=1.12.2,<2.0.0)",
    "pylsp-mypy (>=0.7.0,<0.8.0)",
    "python-lsp-isort (>=0.2.1,<0.3.0)",
    "python-lsp-black (>=2.0.0,<3.0.0)",
    "llama-index-llms-deepseek (>=0.1.1,<0.2.0)",
    "llama-index-llms-ollama (>=0.5.4,<0.6.0)",
    "llama-index (>=0.12.34,<0.13.0)",
    "ollama (>=0.4.8,<0.5.0)",
    "gevent (>=25.4.2,<26.0.0)",
    "loguru (>=0.7.3,<0.8.0)"
]

[tool.poetry]
requires-poetry = ">=2.0"

[tool.poetry.group.dev.dependencies]
debugpy = "^1.8.14"

[tool.mypy]
files = "smartvision, tests"
mypy_path = "smartvision"
namespace_packages = true
explicit_package_bases = true
strict = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
exclude = [
    "tests/fixtures",
    "tests/masonry/builders/fixtures",
    "tests/utils/fixtures",
]



[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TC",  # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
ignore = [
    "B904", # use 'raise ... from err'
    "B905", # use explicit 'strict=' parameter with 'zip()'
]
extend-safe-fixes = [
    "TC",  # move import from and to TYPE_CHECKING blocks
]
unfixable = [
    "ERA", # do not autoremove commented out code
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["poetry"]
known-third-party = ["poetry.core"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"